
@article{brochier_massively_2018,
	title = {Massively parallel recordings in macaque motor cortex during an instructed delayed reach-to-grasp task},
	volume = {5},
	copyright = {2018 Nature Publishing Group},
	issn = {2052-4463},
	url = {https://www.nature.com/articles/sdata201855},
	doi = {10.1038/sdata.2018.55},
	abstract = {We publish two electrophysiological datasets recorded in motor cortex of two macaque monkeys during an instructed delayed reach-to-grasp task, using chronically implanted 10-by-10 Utah electrode arrays. We provide a) raw neural signals (sampled at 30 kHz), b) time stamps and spike waveforms of offline sorted single and multi units (93/49 and 156/19 SUA/MUA for the two monkeys, respectively), c) trial events and the monkey{\textquoteright}s behavior, and d) extensive metadata hierarchically structured via the odML metadata framework (including quality assessment post-processing steps, such as trial rejections). The dataset of one monkey contains a simultaneously saved record of the local field potential (LFP) sampled at 1 kHz. To load the datasets in Python, we provide code based on the Neo data framework that produces a data structure which is annotated with relevant metadata. We complement this loading routine with an example code demonstrating how to access the data objects (e.g., raw signals) contained in such structures. For Matlab users, we provide the annotated data structures as mat files.},
	language = {en},
	urldate = {2018-04-16},
	journal = {Scientific Data},
	author = {Brochier, Thomas and Zehl, Lyuba and Hao, Yaoyao and Duret, Margaux and Sprenger, Julia and Denker, Michael and Gr{\"u}n, Sonja and Riehle, Alexa},
	month = apr,
	year = {2018},
	pages = {180055},
	file = {Full Text PDF:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/BVHUAZ4M/Brochier et al. - 2018 - Massively parallel recordings in macaque motor cor.pdf:application/pdf;Snapshot:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/L2MMRIGN/sdata201855.html:text/html}
}

@article{garcia_neo:_2014,
	title = {Neo: an object model for handling electrophysiology data in multiple formats},
	volume = {8},
	issn = {1662-5196},
	shorttitle = {Neo},
	url = {http://journal.frontiersin.org/article/10.3389/fninf.2014.00010/abstract},
	doi = {10.3389/fninf.2014.00010},
	urldate = {2019-07-04},
	journal = {Front. Neuroinform.},
	author = {Garcia, Samuel and Guarino, Domenico and Jaillet, Florent and Jennings, Todd and Pr{\"o}pper, Robert and Rautenberg, Philipp L. and Rodgers, Chris C. and Sobolev, Andrey and Wachtler, Thomas and Yger, Pierre and Davison, Andrew P.},
	year = {2014},
	file = {Full Text:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/ASZMMLKY/Garcia et al. - 2014 - Neo an object model for handling electrophysiolog.pdf:application/pdf}
}

@book{zehl_management_2018,
	address = {J{\"u}lich},
	series = {Schriften des {Forschungszentrums} {J{\"u}lich} {Reihe} {Schl{\"u}sseltechnologien} / {Key} {Technologies}},
	title = {Management of {Electrophysiological} {Data} \& {Metadata} - {Making} complex experiments accessible to yourself and others},
	isbn = {978-3-95806-311-2},
	abstract = {As neuroscientists, we are obligated to guarantee the reliability of our research workflows and results.For this reason, most neuroscientific, peer-reviewed journals require, besides a full description of thenew scientific findings and used methods, at least also a brief summary of the used data. For a completelyopen scientific inquiry and to further promote scientific progress as required by most nationalfunding agencies, it would be best to share the raw data along with an analysis paper or independentlyas a standalone data publication. Unfortunately, especially the neuroscientific community ishesitant to share own research data with third parties, because guidelines, tools and support for thepublishing authors to provide data and corresponding adequate information on the experiment aregenerally hard to formalize and often missing. As a consequence, published scientific results remainunreproducible by other researchers. Along an example of a complex electrophysiological experimentwhich was conducted by external collaboration partners, I will demonstrate how to share and publishdata, but also identify the reasons why researchers, in particular experimentalists in electrophysiology,are hesitant to try the same. For this, I first provide a data descriptor of the experiment following theguidelines of a pure data journal from the Nature publishing group, called Scientific Data. Accordingto the journal guidelines, I describe all information necessary to be able to understand the setupand workflow of the experiment as well as the minimum information necessary to be able to workwith the corresponding datasets. The latter requires the provision of a robust data loading routine.To guarantee the access to the data of the experiment, I implemented a commonly usable loadingroutine for the data formats of the used data acquisition (DAQ) system from Blackrock Microsystems(Cerebus DAQ), and published it as part of an open source data framework, called Neo. Neo hasthe advantage of representing data in standardized structures that allow researchers to use commonanalysis routines on different data formats. In addition, it is possible to further annotate the Neo datastructures with experiment-specific information on the data. To automatically integrate such information,termed metadata, it is best to have them organised in a machine-readable format. Althoughseveral software solutions for such metadata formats exist, they are usually not tested for complexuse cases, such as the example experiment. In most cases, they only provide the framework itself as astandardized metadata representation or specification, and no solutions for how to actually compile auseful metadata collection. For the example experiment, I chose a metadata framework, called openmetadata Markup Language (odML), an open source project developed by the German Node (GNode)of the International Neuroinformatics Coordination Facility (INCF). In the second part of thethesis, I demonstrate how to organize metadata for the experiment, to be able to compile and use acorresponding odML metadata collection. To facilitate the compilation process for my collaborators, Ideveloped a Python package, called odMLtables, which facilitates the access to the odML frameworkby an algorithmic transformation of odML into a spreadsheet format (csv or xls) and back. In addition,I provided a complete workflow for collecting and storing the metadata of the experiment intoa comprehensive odML-file collection. Furthermore, I provided a specified data loading routine thatautomatically annotates the data structures with the corresponding metadata of the collection. Thelatter improves the workflow in the course of neuroscientific analyses of the data from the exampleexperiment, as demonstrated in the last part of my thesis. In summary, I show that the preparationsto properly share research data within a scientific collaboration are cumbersome and time consuming,but essential for successfully publishing data and analysis results for a broader audience of users. Topromote data sharing within the neuroscientific community and to provide a better foundation forreproducible research, my thesis offers a coherent strategy for managing electrophysiological data andmetadata using a well selected set of available technologies},
	number = {167},
	publisher = {Forschungszentrum J{\"u}lich GmbH Zentralbibliothek, Verlag},
	author = {Zehl, Lyuba},
	year = {2018}
}

@article{zhang_neoanalysis:_2017,
	title = {{NeoAnalysis}: a {Python}-based toolbox for quick electrophysiological data processing and analysis},
	volume = {16},
	issn = {1475-925X},
	shorttitle = {{NeoAnalysis}},
	url = {https://doi.org/10.1186/s12938-017-0419-7},
	doi = {10.1186/s12938-017-0419-7},
	abstract = {In a typical electrophysiological experiment, especially one that includes studying animal behavior, the data collected normally contain spikes, local field potentials, behavioral responses and other associated data. In order to obtain informative results, the data must be analyzed simultaneously with the experimental settings. However, most open-source toolboxes currently available for data analysis were developed to handle only a portion of the data and did not take into account the sorting of experimental conditions. Additionally, these toolboxes require that the input data be in a specific format, which can be inconvenient to users. Therefore, the development of a highly integrated toolbox that can process multiple types of data regardless of input data format and perform basic analysis for general electrophysiological experiments is incredibly useful.},
	number = {1},
	urldate = {2019-07-04},
	journal = {BioMedical Engineering OnLine},
	author = {Zhang, Bo and Dai, Ji and Zhang, Tao},
	month = nov,
	year = {2017},
	pages = {129},
	file = {Full Text PDF:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/CSYX3XVF/Zhang et al. - 2017 - NeoAnalysis a Python-based toolbox for quick elec.pdf:application/pdf;Snapshot:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/X4UT4Q3H/s12938-017-0419-7.html:text/html}
}

@article{garcia_neo:_2014-1,
	title = {Neo: an object model for handling electrophysiology data in multiple formats},
	volume = {8},
	issn = {1662-5196},
	shorttitle = {Neo},
	doi = {10.3389/fninf.2014.00010},
	abstract = {Neuroscientists use many different software tools to acquire, analyze and visualize electrophysiological signals. However, incompatible data models and file formats make it difficult to exchange data between these tools. This reduces scientific productivity, renders potentially useful analysis methods inaccessible and impedes collaboration between labs. A common representation of the core data would improve interoperability and facilitate data-sharing. To that end, we propose here a language-independent object model, named "Neo," suitable for representing data acquired from electroencephalographic, intracellular, or extracellular recordings, or generated from simulations. As a concrete instantiation of this object model we have developed an open source implementation in the Python programming language. In addition to representing electrophysiology data in memory for the purposes of analysis and visualization, the Python implementation provides a set of input/output (IO) modules for reading/writing the data from/to a variety of commonly used file formats. Support is included for formats produced by most of the major manufacturers of electrophysiology recording equipment and also for more generic formats such as MATLAB. Data representation and data analysis are conceptually separate: it is easier to write robust analysis code if it is focused on analysis and relies on an underlying package to handle data representation. For that reason, and also to be as lightweight as possible, the Neo object model and the associated Python package are deliberately limited to representation of data, with no functions for data analysis or visualization. Software for neurophysiology data analysis and visualization built on top of Neo automatically gains the benefits of interoperability, easier data sharing and automatic format conversion; there is already a burgeoning ecosystem of such tools. We intend that Neo should become the standard basis for Python tools in neurophysiology.},
	language = {eng},
	journal = {Front Neuroinform},
	author = {Garcia, Samuel and Guarino, Domenico and Jaillet, Florent and Jennings, Todd and Pr{\"o}pper, Robert and Rautenberg, Philipp L. and Rodgers, Chris C. and Sobolev, Andrey and Wachtler, Thomas and Yger, Pierre and Davison, Andrew P.},
	year = {2014},
	pmid = {24600386},
	pmcid = {PMC3930095},
	keywords = {Python, interoperability, electrophysiology, file formats, software},
	pages = {10},
	file = {Full Text:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/RLKIJZ67/Garcia et al. - 2014 - Neo an object model for handling electrophysiolog.pdf:application/pdf}
}

@misc{noauthor_pep_nodate,
	title = {{PEP} 8 -- {Style} {Guide} for {Python} {Code}},
	url = {https://www.python.org/dev/peps/pep-0008/},
	abstract = {The official home of the Python Programming Language},
	language = {en},
	urldate = {2019-07-04},
	journal = {Python.org},
	file = {Snapshot:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/P3MPVCYS/pep-0008.html:text/html}
}

@article{hunter_matplotlib:_2007,
	title = {Matplotlib: {A} 2D {Graphics} {Environment}},
	volume = {9},
	issn = {1521-9615},
	shorttitle = {Matplotlib},
	url = {http://ieeexplore.ieee.org/document/4160265/},
	doi = {10.1109/MCSE.2007.55},
	number = {3},
	urldate = {2019-07-09},
	journal = {Comput. Sci. Eng.},
	author = {Hunter, John D.},
	year = {2007},
	pages = {90--95}
}

@article{van_der_walt_numpy_2011,
	title = {The {NumPy} {Array}: {A} {Structure} for {Efficient} {Numerical} {Computation}},
	volume = {13},
	issn = {1521-9615},
	shorttitle = {The {NumPy} {Array}},
	url = {http://ieeexplore.ieee.org/document/5725236/},
	doi = {10.1109/MCSE.2011.37},
	number = {2},
	urldate = {2019-07-09},
	journal = {Comput. Sci. Eng.},
	author = {van der Walt, St{\'e}fan and Colbert, S Chris and Varoquaux, Ga{\"e}l},
	month = mar,
	year = {2011},
	pages = {22--30},
	file = {Full Text:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/SN67SLJS/van der Walt et al. - 2011 - The NumPy Array A Structure for Efficient Numeric.pdf:application/pdf}
}

@article{perez_ipython:_2007,
	title = {{IPython}: {A} {System} for {Interactive} {Scientific} {Computing}},
	volume = {9},
	issn = {1521-9615},
	shorttitle = {{IPython}},
	url = {http://ieeexplore.ieee.org/document/4160251/},
	doi = {10.1109/MCSE.2007.53},
	number = {3},
	urldate = {2019-07-09},
	journal = {Comput. Sci. Eng.},
	author = {Perez, Fernando and Granger, Brian E.},
	year = {2007},
	pages = {21--29}
}

@book{jones_scipy:_2001,
	title = {{SciPy}: {Open} source scientific tools for {Python}},
	url = {http://www.scipy.org/},
	author = {Jones, Eric and Oliphant, Travis and Peterson, Pearu and {others}},
	year = {2001}
}

@misc{dale_quantities_nodate,
	title = {Quantities {Documenting}},
	url = {https://python-quantities.readthedocs.io/en/latest/devel/documenting.html},
	urldate = {2019-07-09},
	author = {Dale, Darren},
	file = {Documenting Quantities {\textemdash} quantities 0.12.1+6.g1ef120b documentation:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/CDEK8USI/documenting.html:text/html}
}

@article{kelly_comparison_2007,
	title = {Comparison of recordings from microelectrode arrays and single electrodes in visual cortex},
	volume = {27},
	issn = {0270-6474},
	url = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3039847/},
	doi = {10.1523/JNEUROSCI.4906-06.2007},
	number = {2},
	urldate = {2019-07-19},
	journal = {J Neurosci},
	author = {Kelly, Ryan C. and Smith, Matthew A. and Samonds, Jason M. and Kohn, Adam and Bonds, A.B. and Movshon, J. Anthony and Lee, Tai Sing},
	month = jan,
	year = {2007},
	pmid = {17215384},
	pmcid = {PMC3039847},
	pages = {261--264},
	file = {PubMed Central Full Text PDF:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/A5Y3NEQH/Kelly et al. - 2007 - Comparison of recordings from microelectrode array.pdf:application/pdf}
}

@article{shew_simultaneous_2010,
	title = {Simultaneous multi-electrode array recording and two-photon calcium imaging of neural activity},
	volume = {192},
	issn = {0165-0270},
	url = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2934901/},
	doi = {10.1016/j.jneumeth.2010.07.023},
	abstract = {A complete understanding of how brain circuits function will require measurement techniques which monitor large scale network activity simultaneously with the activity of local neural populations at a small scale. Here we present a useful step towards achieving this aim: simultaneous two-photon calcium imaging and multi-electrode array (MEA) recordings. The primary challenge of this method is removing an electrical artifact from the MEA signals that is caused by the imaging laser. Here we show that artifact removal can be achieved with a simple filtering scheme. As a demonstration of this technique we compare large-scale local field potential signals to single-neuron activity in a small-scale group of cells recorded from rat acute slices under two conditions: suppressed vs. intact inhibitory interactions between neurons.},
	number = {1},
	urldate = {2019-07-19},
	journal = {J Neurosci Methods},
	author = {Shew, Woodrow L. and Bellay, Timothy and Plenz, Dietmar},
	month = sep,
	year = {2010},
	pmid = {20659501},
	pmcid = {PMC2934901},
	pages = {75--82},
	file = {PubMed Central Full Text PDF:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/U5MZ34FK/Shew et al. - 2010 - Simultaneous multi-electrode array recording and t.pdf:application/pdf}
}

@article{giovannucci_caiman_2019,
	title = {{CaImAn} an open source tool for scalable calcium imaging data analysis},
	volume = {8},
	issn = {2050-084X},
	url = {https://doi.org/10.7554/eLife.38173},
	doi = {10.7554/eLife.38173},
	abstract = {Advances in fluorescence microscopy enable monitoring larger brain areas in-vivo with finer time resolution. The resulting data rates require reproducible analysis pipelines that are reliable, fully automated, and scalable to datasets generated over the course of months. We present CaImAn, an open-source library for calcium imaging data analysis. CaImAn provides automatic and scalable methods to address problems common to pre-processing, including motion correction, neural activity identification, and registration across different sessions of data collection. It does this while requiring minimal user intervention, with good scalability on computers ranging from laptops to high-performance computing clusters. CaImAn is suitable for two-photon and one-photon imaging, and also enables real-time analysis on streaming data. To benchmark the performance of CaImAn we collected and combined a corpus of manual annotations from multiple labelers on nine mouse two-photon datasets. We demonstrate that CaImAn achieves near-human performance in detecting locations of active neurons.},
	urldate = {2019-07-19},
	journal = {eLife},
	author = {Giovannucci, Andrea and Friedrich, Johannes and Gunn, Pat and Kalfon, J{\'e}r{\'e}mie and Brown, Brandon L and Koay, Sue Ann and Taxidis, Jiannis and Najafi, Farzaneh and Gauthier, Jeffrey L and Zhou, Pengcheng and Khakh, Baljit S and Tank, David W and Chklovskii, Dmitri B and Pnevmatikakis, Eftychios A},
	editor = {Kleinfeld, David and King, Andrew J},
	month = jan,
	year = {2019},
	keywords = {calcium imaging, software, data analysis, one-photon, open source, two-photon},
	pages = {e38173},
	file = {Full Text PDF:/home/julia/.mozilla/firefox/i2yyyfvo.default/zotero/storage/2NMA264S/Giovannucci et al. - 2019 - CaImAn an open source tool for scalable calcium im.pdf:application/pdf}
}

@article{hunter_matplotlib:_2007-1,
	title = {Matplotlib: {A} 2D graphics environment},
	volume = {9},
	doi = {10.1109/MCSE.2007.55},
	abstract = {Matplotlib is a 2D graphics package used for Python for application development, interactive scripting, and publication-quality image generation across user interfaces and operating systems.},
	number = {3},
	journal = {Computing in Science \& Engineering},
	author = {Hunter, J. D.},
	year = {2007},
	pages = {90--95}
}